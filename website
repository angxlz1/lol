# app.py
from flask import Flask, render_template, request, jsonify, redirect, url_for, flash, session
from flask_login import LoginManager, UserMixin, login_user, login_required, logout_user, current_user
from werkzeug.security import generate_password_hash, check_password_hash
from werkzeug.utils import secure_filename
import pandas as pd
import os
import json

app = Flask(__name__)
app.secret_key = 'your_secret_key_here'  # Cambiar en producción
login_manager = LoginManager()
login_manager.init_app(app)
login_manager.login_view = 'login'

UPLOAD_FOLDER = 'uploads'
ALLOWED_EXTENSIONS = {'xlsx', 'xls'}
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

if not os.path.exists(UPLOAD_FOLDER):
    os.makedirs(UPLOAD_FOLDER)

# Modelo de usuario para administrador
class User(UserMixin):
    def __init__(self, id, username, password_hash):
        self.id = id
        self.username = username
        self.password_hash = password_hash

# Usuario administrador predeterminado
admin_user = User(1, 'admin', generate_password_hash('admin123'))
users = {1: admin_user}

@login_manager.user_loader
def load_user(user_id):
    return users.get(int(user_id))

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

def get_student_data():
    excel_path = os.path.join(app.config['UPLOAD_FOLDER'], 'grades.xlsx')
    if os.path.exists(excel_path):
        return pd.read_excel(excel_path)
    return pd.DataFrame()

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/search', methods=['POST'])
def search():
    search_term = request.form.get('search_term', '').strip()
    if not search_term:
        return jsonify({'error': 'Por favor ingrese un término de búsqueda'})

    try:
        df = get_student_data()
        if df.empty:
            return jsonify({'error': 'No hay datos disponibles'})

        # Buscar por matrícula o nombre
        result = df[
            (df['Matricula'].astype(str).str.contains(search_term, case=False)) |
            (df['Nombre'].str.contains(search_term, case=False))
        ]

        if result.empty:
            return jsonify({'error': 'Estudiante no encontrado'})

        # Convertir el resultado a diccionario
        student_data = result.iloc[0].to_dict()
        return jsonify({'success': True, 'data': student_data})

    except Exception as e:
        return jsonify({'error': f'Error en la búsqueda: {str(e)}'})

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form.get('username')
        password = request.form.get('password')
        
        user = next((u for u in users.values() if u.username == username), None)
        if user and check_password_hash(user.password_hash, password):
            login_user(user)
            return redirect(url_for('admin'))
        
        flash('Usuario o contraseña incorrectos')
    return render_template('login.html')

@app.route('/logout')
@login_required
def logout():
    logout_user()
    return redirect(url_for('index'))

@app.route('/admin')
@login_required
def admin():
    return render_template('admin.html')

@app.route('/upload', methods=['POST'])
@login_required
def upload_file():
    if 'file' not in request.files:
        return jsonify({'error': 'No se seleccionó ningún archivo'})
    
    file = request.files['file']
    if file.filename == '':
        return jsonify({'error': 'No se seleccionó ningún archivo'})
    
    if file and allowed_file(file.filename):
        filename = 'grades.xlsx'
        file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
        file.save(file_path)
        return jsonify({'success': 'Archivo subido correctamente'})
    
    return jsonify({'error': 'Tipo de archivo no permitido'})

if __name__ == '__main__':
    app.run(debug=True)

# templates/index.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistema de Consulta de Notas</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand" href="/">
                <img src="{{ url_for('static', filename='img/logo.png') }}" alt="Logo Escuela" height="40">
                Sistema Escolar
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('login') }}">Admin</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">Consulta de Calificaciones</h4>
                    </div>
                    <div class="card-body">
                        <form id="searchForm" class="mb-4">
                            <div class="input-group">
                                <input type="text" id="searchInput" class="form-control" 
                                       placeholder="Ingrese matrícula o nombre del estudiante">
                                <button type="submit" class="btn btn-primary">Buscar</button>
                            </div>
                        </form>
                        <div id="results" class="d-none">
                            <h5>Resultados:</h5>
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Matrícula</th>
                                        <th>Nombre</th>
                                        <th>Calificaciones</th>
                                    </tr>
                                </thead>
                                <tbody id="resultsBody"></tbody>
                            </table>
                        </div>
                        <div id="error" class="alert alert-danger d-none"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <footer class="footer mt-5 py-3 bg-light">
        <div class="container text-center">
            <span class="text-muted">© 2024 Sistema Escolar. Todos los derechos reservados.</span>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('searchForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const searchTerm = document.getElementById('searchInput').value;
            const results = document.getElementById('results');
            const error = document.getElementById('error');
            const resultsBody = document.getElementById('resultsBody');

            try {
                const response = await fetch('/search', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `search_term=${encodeURIComponent(searchTerm)}`
                });

                const data = await response.json();

                if (data.error) {
                    results.classList.add('d-none');
                    error.classList.remove('d-none');
                    error.textContent = data.error;
                } else {
                    error.classList.add('d-none');
                    results.classList.remove('d-none');
                    
                    // Crear fila de resultados
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${data.data.Matricula}</td>
                        <td>${data.data.Nombre}</td>
                        <td>
                            ${Object.entries(data.data)
                                .filter(([key]) => key !== 'Matricula' && key !== 'Nombre')
                                .map(([subject, grade]) => `${subject}: ${grade}`)
                                .join('<br>')}
                        </td>
                    `;
                    
                    resultsBody.innerHTML = '';
                    resultsBody.appendChild(row);
                }
            } catch (err) {
                error.classList.remove('d-none');
                error.textContent = 'Error en la búsqueda. Por favor intente nuevamente.';
            }
        });
    </script>
</body>
</html>

# templates/login.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Sistema Escolar</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">Acceso Administrativo</h4>
                    </div>
                    <div class="card-body">
                        <form method="POST">
                            <div class="mb-3">
                                <label for="username" class="form-label">Usuario</label>
                                <input type="text" class="form-control" id="username" name="username" required>
                            </div>
                            <div class="mb-3">
                                <label for="password" class="form-label">Contraseña</label>
                                <input type="password" class="form-control" id="password" name="password" required>
                            </div>
                            <button type="submit" class="btn btn-primary">Ingresar</button>
                        </form>
                        {% with messages = get_flashed_messages() %}
                            {% if messages %}
                                {% for message in messages %}
                                    <div class="alert alert-danger mt-3">{{ message }}</div>
                                {% endfor %}
                            {% endif %}
                        {% endwith %}
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

# templates/admin.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Panel de Administración - Sistema Escolar</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand" href="/">Sistema Escolar</a>
            <div class="navbar-nav ms-auto">
                <a class="nav-link text-white" href="{{ url_for('logout') }}">Cerrar Sesión</a>
            </div>
        </div>
    </nav>

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">Subir Archivo de Calificaciones</h4>
                    </div>
                    <div class="card-body">
                        <form id="uploadForm">
                            <div class="mb-3">
                                <label for="file" class="form-label">Seleccione el archivo Excel</label>
                                <input type="file" class="form-control" id="file" accept=".xlsx,.xls" required>
                            </div>
                            <button type="submit" class="btn btn-primary">Subir Archivo</button>
                        </form>
                        <div id="message" class="mt-3"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('uploadForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData();
            const fileInput = document.getElementById('file');
            formData.append('file', fileInput.files[0]);

            try {
                const response = await fetch('/upload', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();
                const messageDiv = document.getElementById('message');
                
                if (data.success) {
                    messageDiv.className = 'alert alert-success mt-3';
                    messageDiv.textContent = data.success;
                } else {
                    messageDiv.className = 'alert alert-danger mt-3';
                    messageDiv.textContent = data.error;
                }
            } catch (error) {
                document.getElementById('message').className = 'alert alert-danger mt-3';
                document.getElementById('message').textContent = 'Error al subir el archivo';
            }
        });
    </script>
</body>
</html>

# static/css/style.css
body {
    background-color: #f8f9fa;
}

.navbar-brand img {
    margin-right: 10px;
}

.card {
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.footer {
    position: fixed;
    bottom: 0;
    width: 100%;
    background-color: #f8f9fa;
    border-top: 1px solid #dee2e6;
}

#results table {
    margin-top: 20px;
}

.
